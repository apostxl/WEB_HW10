from flask import Flask, render_template, redirect, url_for, request
from flask_sqlalchemy import SQLAlchemy
from flask_login import LoginManager, UserMixin, login_user, logout_user, login_required

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///site.db'
app.config['SECRET_KEY'] = 'your_secret_key'
db = SQLAlchemy(app)
login_manager = LoginManager(app)


class User(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(20), unique=True, nullable=False)
    password = db.Column(db.String(60), nullable=False)


class Author(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(100), nullable=False)


class Quote(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    text = db.Column(db.Text, nullable=False)
    author_id = db.Column(db.Integer, db.ForeignKey('author.id'), nullable=False)
    author = db.relationship('Author', backref=db.backref('quotes', lazy=True))

@login_manager.user_loader
def load_user(user_id):
    return User.query.get(int(user_id))

@app.route('/register', methods=['GET', 'POST'])
def register():
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']
        user = User(username=username, password=password)
        db.session.add(user)
        db.session.commit()
        return redirect(url_for('login'))
    return render_template('register.html')

@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']
        user = User.query.filter_by(username=username).first()
        if user and user.password == password:
            login_user(user)
            return redirect(url_for('index'))
    return render_template('login.html')

@app.route('/logout')
@login_required
def logout():
    logout_user()
    return redirect(url_for('index'))

@app.route('/add_author', methods=['GET', 'POST'])
@login_required
def add_author():
    if request.method == 'POST':
        author_name = request.form['author_name']
        author = Author(name=author_name)
        db.session.add(author)
        db.session.commit()
        return redirect(url_for('index'))
    return render_template('add_author.html')

@app.route('/add_quote', methods=['GET', 'POST'])
@login_required
def add_quote():
    if request.method == 'POST':
        quote_text = request.form['quote_text']
        author_id = request.form['author_id']
        quote = Quote(text=quote_text, author_id=author_id)
        db.session.add(quote)
        db.session.commit()
        return redirect(url_for('index'))
    authors = Author.query.all()
    return render_template('add_quote.html', authors=authors)

@app.route('/')
def index():
    quotes = Quote.query.all()
    return render_template('index.html', quotes=quotes)

if __name__ == '__main__':
    db.create_all()
    app.run(debug=True)
